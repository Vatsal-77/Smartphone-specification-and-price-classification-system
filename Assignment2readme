Summary of Assignment 2 for Mobile Specification and Price Classification Database:

Step 1: Created Twitter's developer account.
Step 2: Created consumer key, developer key while created a unique Api of individual user.
Step 3: Created a data frame assigning appropriate attributes to different column.
Step 4: Authentication of the Api created.
Step 5: Appropriate data was Scraped using keywords such as ("iphone", "samsung", "vivo" , "oppo") respectively.
Step 6: Tweet limits was set for finite number of data selection purpose.
Step 7: Data Scraped was append in the data frame created.
Step 8: Scraped data frame was converted and saved as a CSV file(smartphone.csv).
Step 9: The CSV file(smartphone) saved was pushed and run in the software sqlite3 to ensure that the queries satisfy the data in the scraped data frame.
Step 10: Then saved the scrapped data in google drive.
Step 11: After the data and the queries being tested on Sqlite3 the same CSV file (smartphone.csv) was used to run on google colab.
Step 12: All queries were then run on google colab as well (colab linked is also attached with the file)
Step 13: Created the ER diagram and UML diagram
Step 14: Created all the use cases for the queries

Colab Link: https://colab.research.google.com/drive/1igUtInR8QPaowYEjehtshiu6NcBWjbS6?usp=sharing
Scrapped data csv file link: https://drive.google.com/file/d/1crh82ox5KrdF6xxUMXqVhwTRKUEDHXfk/view?usp=sharing




Queries about physical model:
1.What user posted this tweet? 
Which user posted the tweet with tweet id = '1591123524063997952':
Soln:
select u.user_name, t.tweet from twitterdata as t  
left join twitteruser as u
on t.screen_name = u.screen_name
where t.id = '1591123524063997952';

π u . user_name, t . tweet
 σ t . id = "1591123524063997952"
  (ρ t twitterdata ⋈ t . screen_name = u . screen_name
   ρ u twitteruser)

2.    When did the user post this tweet? 
when did the user posted the tweet with tweet id = ‘1591466045049955852’
Soln:
select u.user_name, t.Created_at from twitterdata as t   
inner join twitteruser as u  
on t.screen_name = u.screen_name  
where t.id = ‘1591466045049955852’;
π u . user_name, t . Created_at
     σ t . id = "1591466045046685696" 
       (ρ t twitterdata ⋈ t . screen_name = u . screen_name 
        ρ u twitteruser) 

3.    What tweets have this user posted in the past 24 hours? 
What tweets have been posted by user 'vatsalmehta85' in past 24 hours?
Soln:
select u.user_name, t.tweet from twitterdata as t   
join twitteruser as u  
on t.screen_name = u.screen_name  
where u.user_name = 'vatsalmehta85' and STR_TO_DATE(Created_at, '%m/%d/%Y') < CURDATE() - INTERVAL 1 DAY; 

π u . user_name, t . tweet
 σ u . user_name = "'vatsalmehta85' " AND Created_at < sysdate - 1
  (ρ t twitterdata ⋈ t . screen_name = u . screen_name
   ρ u twitteruser)

4.    How many tweets have this user posted in the past 24 hours? 
What tweets have been posted by user 'vatsalmehta85' in past 24 hours?
Soln:
select u.user_name , count (t.tweets) as NumberofTweets from twitterdata as t    
join twitteruser as u   
on t.screen_name = u.screen_name   
where u.user_name = 'vatsalmehta85' and STR_TO_DATE(Created_at, '%m/%d/%Y') < CURDATE() - INTERVAL 1 DAY;
π u . user_name, COUNT (tweets) → numberoftweets
 γ COUNT (tweets)
  σ u . user_name = "'vatsalmehta85' " AND Created_at < sysdate - 1
   (ρ t twitterdata ⋈ t . screen_name = u . screen_name
    ρ u twitteruser)

5.When did this user join Twitter? 
When did the user “x” join twitter?
Soln:
select user_name, user_created_at from twitteruser
where user_name = 'vatsalmehta85';


6.What keywords/ hashtags are popular? 
Select top 2 popular hashtags.
Soln:
select hashtags, count(id) as popular_tweet_count
from hashtagsdata
group by hashtags
order by popular_tweet_count desc
limit 2;  
τ popular_tweet_count ↓
 π hashtags, COUNT (id) → popular_tweet_count
  γ hashtags, COUNT (id) hashtagsdata

7.What tweets are popular? 
 Select top 4 popular tweets.
Soln:
select id, retweet_count
from twitterdata order by retweet_count desc
limit 4;



USE CASES:

1.	View on twitter for smartphone tweets in location Brasil or India
Description: User Views on twitter for smartphone tweets in location Brasil or India
Actors: User
Precondition:  User must have at least one of the above mentioned country
Steps:
Actor action – User will use hashtags like #smartphone in the View tab
System Responses – 
Post Condition: User has the data for the location
Alternate Path: 
Error: User search information is not available

2.	View on twitter for smartphone with 12GB ram and 256 GB internal storage
Description: User Views for smartphone with 12GB ram and 256 GB internal storage
Actors: User
Precondition: User must have the above mentioned specifications in his search
Steps:
Actor action – User will use hashtags like #smartphone in the View tab
System Responses –  
Post Condition: User has the data for the specifications
Alternate Path: 
Error: Shows no results for the View

3.	View on twitter where username starts with “A”
Description: User Views for tweets with username that starts with “A”
Actors: User
Precondition: User must have the above mentioned username in his data
Steps:
Actor action – User will use hashtags like #smartphone in the View tab
System Responses –  
Post Condition: User has the data
Alternate Path: 
Error: Shows no results for the View

4.	View on twitter for username, follower count and their location
Description: User Views for a specific username, follower count and their location
Actors: User
Precondition: User must have the above mentioned attributes in his data
Steps:
Actor action – 
System Responses – Will show results according to the user View
Post Condition: User has the data
Alternate Path: 
Error: Shows no results for the View

5.	View on twitter where username, screen name, followers count have text like “$” price
6.	Description: User Views on twitter where username, screen name, followers count have text like “$” price
Actors: User
Precondition: User must have the above mentioned attributes in his data
Steps:
Actor action –
System Responses – Will show results according to the user View
Post Condition: User has the data
Alternate Path:
Error: Shows no results for the View

6.	View on twitter for distinct tweets which are created at, and its id
Description: User View on twitter for distinct tweets which are created at, and its id
Actors: User
Precondition: User must have the above mentioned attributes in his data
Steps:
Actor action –
System Responses – Will show results according to the user View
Post Condition: User has the data
Alternate Path:
Error: Shows no results for the View

7.	View username and text which contains 5000mAh battery

Description: User View username and text which contains 5000mAh battery
Actors: User
Precondition: User must have the above mentioned attributes in his data
Steps:
Actor action –
System Responses – Will show results according to the user View
Post Condition: User has the data
Alternate Path:
Error: Shows no results for the View

8.	View for tweets which contain texts like 2 free Samsung watches

Description: User View for tweets which contain texts like 2 free Samsung watches
Actors: User
Precondition: User must have the above mentioned attributes in his data
Steps:
Actor action –
System Responses – Will show results according to the user View
Post Condition: User has the data
Alternate Path:
Error: Shows no results for the View

9.	View on twitter for smartphone whose price is $244.99
Description: User View on twitter for smartphone whose price is $244.99
Actors: User
Precondition: User must have the above mentioned attributes in his data
Steps:
Actor action –
System Responses – Will show results according to the user View
Post Condition: User has the data
Alternate Path:
Error: Shows no results for the View

10.	View on scrapped data for followers count less than 100

Description: User View on scrapped data for followers count less than 100
Actors: User
Precondition: User must have the above mentioned attributes in his data
Steps:
Actor action –
System Responses – Will show results according to the user View
Post Condition: User has the data
Alternate Path:
Error: Shows no results for the View

11.	View for username and description of the max follower
Description: User view for username and description of the max follower 
Actors: User
Precondition: User must have the above mentioned attributes in his data
Steps:
Actor action –
System Responses – Will show results according to the user View
Post Condition: User has the data
Alternate Path:
Error: Shows no results for the View

11.	View for username and description of the min follower

Description: User View for username and description of the min follower
Actors: User
Precondition: User must have the above mentioned attributes in his data
Steps:
Actor action –
System Responses – Will show results according to the user View
Post Condition: User has the data
Alternate Path:
Error: Shows no results for the View

13.	View for smartphones in texts which contain water resistant

Description: User Views for smartphones in texts which contain water resistant
Actors: User
Precondition: User must have the above mentioned attributes in his data
Steps:
Actor action –
System Responses – Will show results according to the user View
Post Condition: User has the data
Alternate Path:
Error: Shows no results for the View

14.	View for the average of follower counts from scrapped data
 
Description: User Views for the average of follower counts from scrapped data
Actors: User
Precondition: User must have the above mentioned attributes in his data
Steps:
Actor action –
System Responses – Will show results according to the user View
Post Condition: User has the data
Alternate Path:
Error: Shows no results for the View

15.	View for tweets which were created between 11/11/2022 and 11/12/2022

Description: User Views for tweets which were created between 11/11/2022 and 11/12/2022
Actors: User
Precondition: User must have the above mentioned attributes in his data
Steps:
Actor action –
System Responses – Will show results according to the user View
Post Condition: User has the data
Alternate Path:
Error: Shows no results for the View




<br>

<img src="UML.png" width="600" height="300"/><br><br>













